---
- import_tasks: kubeadm.yaml

- shell: "hostname -A"
  register: host_name
- shell: "ifconfig enp0s8 | grep Mask | awk '{print $2}'| cut -f2 -d:"
  register: ipaddr_ENP0S8


- name: generate certificate-key
  shell: "kubeadm alpha certs certificate-key"
  register: cert_key
  when: ansible_hostname == 'master1'
- name: print kubeadm
  debug:
    msg:
    - "kubeadm init --kubernetes-version v1.17.0 --apiserver-advertise-address={{ hostvars.master1.ipaddr_ENP0S8.stdout }} --apiserver-cert-extra-sans={{ LOAD_BALANCER_DNS }},{{ hostvars.master1.ipaddr_ENP0S8.stdout }},{{ hostvars.master2.ipaddr_ENP0S8.stdout }},{{ hostvars.master3.ipaddr_ENP0S8.stdout }}  --node-name $(hostname -A)  --pod-network-cidr 10.10.0.0/16 --service-cidr  10.150.0.0/16  --control-plane-endpoint {{ LOAD_BALANCER_DNS }}:{{ LOAD_BALANCER_PORT }} --upload-certs --certificate-key {{ cert_key.stdout }}"
  when: ansible_hostname == 'master1'
- name: install kubernetes master
  shell: "kubeadm init --kubernetes-version v1.17.0 --apiserver-advertise-address={{ hostvars.master1.ipaddr_ENP0S8.stdout }} --apiserver-cert-extra-sans={{ LOAD_BALANCER_DNS }},{{ hostvars.master1.ipaddr_ENP0S8.stdout }},{{ hostvars.master2.ipaddr_ENP0S8.stdout }},{{ hostvars.master3.ipaddr_ENP0S8.stdout }}  --node-name $(hostname -A)  --pod-network-cidr 10.10.0.0/16 --service-cidr  10.150.0.0/16  --control-plane-endpoint {{ LOAD_BALANCER_DNS }}:{{ LOAD_BALANCER_PORT }} --upload-certs --certificate-key {{ cert_key.stdout }}"
  register: kubeadm_out
  when: ansible_hostname == 'master1'
- name: export join command
  shell: "kubeadm token create --print-join-command --v=9"
  register: kube_join
  when: ansible_hostname == 'master1'



- name: print join as control pane
  debug: msg="'{{  hostvars.master1.kube_join.stdout }}  --control-plane --certificate-key {{ hostvars.master1.cert_key.stdout }} --apiserver-advertise-address={{ ipaddr_ENP0S8.stdout }}   --node-name $(hostname -A)'"
  when: ansible_hostname in  ['master2','master3']
- name: join as control pane
  shell: "{{  hostvars.master1.kube_join.stdout }}  --control-plane --certificate-key {{ hostvars.master1.cert_key.stdout }} --apiserver-advertise-address={{ ipaddr_ENP0S8.stdout }}   --node-name $(hostname -A) "
  register: control_pane_out 
  when: ansible_hostname in  ['master2','master3']



- name: print join as worker 
  debug: "msg='{{ hostvars.master1.kube_join.stdout }}  --node-name $(hostname -A)'"
  when: ansible_hostname is match ('worker') or ansible_hostname is match ('management') 
- name: join as worker
  shell: "{{ hostvars.master1.kube_join.stdout }}  --node-name $(hostname -A) "
  register: worker_out  
  when: ansible_hostname is match ('worker') or ansible_hostname is match ('management') 
